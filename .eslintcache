[{"/Users/test/Desktop/github/whats-in-your-fridge/src/index.js":"1","/Users/test/Desktop/github/whats-in-your-fridge/src/reportWebVitals.js":"2","/Users/test/Desktop/github/whats-in-your-fridge/src/App.js":"3","/Users/test/Desktop/github/whats-in-your-fridge/src/components/Home.js":"4","/Users/test/Desktop/github/whats-in-your-fridge/src/components/Dashboard.js":"5","/Users/test/Desktop/github/whats-in-your-fridge/src/components/Recipe.js":"6","/Users/test/Desktop/github/whats-in-your-fridge/src/components/Intro.js":"7","/Users/test/Desktop/github/whats-in-your-fridge/src/services/UserInfo.js":"8","/Users/test/Desktop/github/whats-in-your-fridge/src/components/auth/Logout.js":"9","/Users/test/Desktop/github/whats-in-your-fridge/src/components/FoodList.js":"10","/Users/test/Desktop/github/whats-in-your-fridge/src/components/Recipes.js":"11","/Users/test/Desktop/github/whats-in-your-fridge/src/components/auth/Login.js":"12","/Users/test/Desktop/github/whats-in-your-fridge/src/components/RecipeDetails/DetailedRecipe.js":"13","/Users/test/Desktop/github/whats-in-your-fridge/src/components/graph/Graph.js":"14"},{"size":500,"mtime":1609976754978,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609976754980,"results":"17","hashOfConfig":"16"},{"size":228,"mtime":1610038060123,"results":"18","hashOfConfig":"16"},{"size":1056,"mtime":1610042133641,"results":"19","hashOfConfig":"16"},{"size":5376,"mtime":1610054480096,"results":"20","hashOfConfig":"16"},{"size":5419,"mtime":1610054210693,"results":"21","hashOfConfig":"16"},{"size":2144,"mtime":1610054377936,"results":"22","hashOfConfig":"16"},{"size":935,"mtime":1610053979711,"results":"23","hashOfConfig":"16"},{"size":736,"mtime":1610045341223,"results":"24","hashOfConfig":"16"},{"size":5395,"mtime":1610054455762,"results":"25","hashOfConfig":"16"},{"size":1372,"mtime":1610054455762,"results":"26","hashOfConfig":"16"},{"size":849,"mtime":1610038060128,"results":"27","hashOfConfig":"16"},{"size":2349,"mtime":1610054210692,"results":"28","hashOfConfig":"16"},{"size":6085,"mtime":1610053082702,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wmv010",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},"/Users/test/Desktop/github/whats-in-your-fridge/src/index.js",[],"/Users/test/Desktop/github/whats-in-your-fridge/src/reportWebVitals.js",[],"/Users/test/Desktop/github/whats-in-your-fridge/src/App.js",["65","66"],"/Users/test/Desktop/github/whats-in-your-fridge/src/components/Home.js",["67","68","69","70"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Recipe from './Recipe';\nimport Typography from '@material-ui/core/Typography';\nimport { getRecipes } from '../services/UserInfo';\nimport Dashboard from './Dashboard';\nimport Intro from './Intro';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userId: \"\", \n            loggedIn: false\n        };\n        this.success = this.success.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    success(res) {\n        console.log(res);\n        this.setState({loggedIn: true, userId: res.profileObj.googleId})\n    }\n\n    logout() {\n        this.setState({loggedIn: false, userId: \"\"});\n    }\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n        return (\n            <>\n                {!this.state.loggedIn \n                ? <><Intro onLogin={this.success} /></>\n                : <><Dashboard onLogout={this.logout} userId={this.state.userId} /></>}\n            </>\n        );\n    }\n}\n\nexport default Home",["71","72"],"/Users/test/Desktop/github/whats-in-your-fridge/src/components/Dashboard.js",[],"/Users/test/Desktop/github/whats-in-your-fridge/src/components/Recipe.js",["73","74","75"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DetailedRecipe from './RecipeDetails/DetailedRecipe';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function Recipe(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n      <>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.recipe.title}\n        subheader=\"September 14, 2016\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.recipe.image}\n        title=\"Recipe\"\n      />\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\" onClick={handleOpen}>\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add piment√≥n, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don‚Äôt open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n    <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        maxWidth=\"md\"\n        fullWidth={true}\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n              <DetailedRecipe recipe={props.recipe} />\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n  </>\n  );\n}\n","/Users/test/Desktop/github/whats-in-your-fridge/src/components/Intro.js",[],"/Users/test/Desktop/github/whats-in-your-fridge/src/services/UserInfo.js",[],"/Users/test/Desktop/github/whats-in-your-fridge/src/components/auth/Logout.js",[],"/Users/test/Desktop/github/whats-in-your-fridge/src/components/FoodList.js",["76","77","78","79","80","81","82","83","84","85"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Icon from '@material-ui/core/Icon';\nimport { getUserList, addToList, removeFromList } from '../services/UserInfo';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        margin: theme.spacing(0, 0, 2),\n    },\n    addItem : {\n        marginBottom: \"10px\",\n        \n    }\n}));\n\nexport default function InteractiveList(props) {\n    const classes = useStyles();\n    const [dense, setDense] = React.useState(false);\n    const [secondary, setSecondary] = React.useState(false);\n    const [foods, setFoods] = React.useState([]);\n    const [foodItem, setFoodItem] = React.useState(\"\");\n\n    const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n        addFood(foodItem);\n      setOpen(false);\n  }\n\n    const retrieve = () => {\n        getUserList(props.user.googleId).then(data => {\n            setFoods(data[\"food\"]);\n        })\n    }\n\n    useEffect(() => retrieve(), []);\n\n    const addFood = (value) => {\n      addToList(props.user.googleId, value).then(data => setFoods(data[\"food\"]));\n    }\n    const deleteFood = (value) => {\n      removeFromList(props.user.googleId, value).then(data => setFoods(data[\"food\"]));\n    };  \n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\" className={classes.title}>\n                What's in {props.user.givenName}'s fridge:\n          </Typography>\n\n            <div className={classes.demo}>\n                <List dense={dense}>\n                <Button className={classes.addItem} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Add new item\n                   </Button>\n                   <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                     <DialogTitle id=\"form-dialog-title\">New Item</DialogTitle>\n                     <DialogContent>\n                       <DialogContentText>\n                       Please enter your food item\n                       </DialogContentText>\n                       <TextField\n                         autoFocus\n                         margin=\"dense\"\n                         id=\"item\"\n                         label=\"Food Item\"\n                         type=\"text\"\n                         value={foodItem}\n                         onInput={e => setFoodItem(e.target.value)}\n                         fullWidth\n                       />\n                     </DialogContent>\n                     <DialogActions>\n                       <Button onClick={handleClose} color=\"primary\">\n                         Cancel\n                       </Button>\n                       <Button onClick={handleSubmit} color=\"primary\">\n                       Add\n                       </Button>\n                     </DialogActions>\n                   </Dialog>\n                    {foods && foods.map((val) => ( \n                        <>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <FolderIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={val}  \n                            //secondary={secondary ? 'Secondary text' : null}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteFood(val)} >\n\n                                    <DeleteIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        </>\n                    ))}\n                </List>\n                \n            </div>\n\n        </div>\n    );\n                    \n\n                    }\n","/Users/test/Desktop/github/whats-in-your-fridge/src/components/Recipes.js",["86"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Recipe from './Recipe';\nimport Typography from '@material-ui/core/Typography';\nimport { getRecipes } from '../services/UserInfo';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth'\n\n\nclass Recipes extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            groups: []\n        };\n    }\n\n    getGridListCols = () => {\n        if (isWidthUp('xl', this.props.width))\n            return 6\n        return 12;\n    }\n\n    componentDidMount() {\n        getRecipes(this.props.user.googleId).then(data => {\n            this.setState({ groups: data });\n        })\n    }\n\n    render() {\n        console.log(this.state.groups);\n        return (\n           <>\n                <Typography variant=\"h6\" gutterBottom>\n                    Possible Recipes\n                </Typography>\n                <br></br>\n                <Grid container spacing={3}>\n                    {this.state.groups.map((recipe, index) => {\n                        return (\n                            <Grid item xs={this.getGridListCols()}>\n                                <Recipe recipe={recipe} />\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n            </>\n        );\n    }\n}\n\nexport default Recipes","/Users/test/Desktop/github/whats-in-your-fridge/src/components/auth/Login.js",[],"/Users/test/Desktop/github/whats-in-your-fridge/src/components/RecipeDetails/DetailedRecipe.js",["87","88"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Recipe from '../Recipe';\nimport Typography from '@material-ui/core/Typography';\nimport { getDetails } from '../../services/UserInfo';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nexport default class DetailedRecipe extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipe: {}\n        };\n    }\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n        const recipe = this.props.recipe;\n        return (\n            <>\n                <Card >\n                    <CardActionArea>\n                        <CardMedia\n                        component=\"img\"\n                        alt=\"Contemplative Reptile\"\n                        height=\"200\"\n                        image={recipe.image}\n                        title=\"Contemplative Reptile\"\n                        />\n                        <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {recipe.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Missing {recipe.missedIngredientCount} ingredients\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Ready in {recipe.readyInMinutes} minutes\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Price per serving: {recipe.pricePerServing}\n                        </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                        <Button size=\"small\" color=\"primary\" href={recipe.sourceUrl}>\n                            Learn More\n                        </Button>\n                    </CardActions>\n                </Card>\n            </>\n        )\n    }\n}\n","/Users/test/Desktop/github/whats-in-your-fridge/src/components/graph/Graph.js",["89"],"import React, { useEffect } from 'react';\nimport { VictoryChart, VictoryLine, VictoryTheme } from 'victory';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { getUserList, addToSpending, removeFromSpending } from '../../services/UserInfo';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        margin: theme.spacing(0, 0, 2),\n    },\n    addItem: {\n        marginBottom: \"10px\",\n\n    }\n}));\n\nexport default function Graph(props) {\n    const classes = useStyles();\n    const [spendings, setSpendings] = React.useState([]);\n    const [spendingItem, setSpendingItem] = React.useState(\"\");\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = () => {\n        addSpending(spendingItem);\n        setOpen(false);\n    }\n\n    const retrieve = () => {\n        getUserList(props.user.googleId).then(data => {\n            console.log(data);\n            setSpendings(data[\"spending\"]);\n        })\n    }\n\n    useEffect(() => retrieve(), []);\n\n    const addSpending = (value) => {\n        addToSpending(props.user.googleId, value).then(data => setSpendings(data[\"spending\"]));\n    }\n    const deleteSpending = (value) => {\n        removeFromSpending(props.user.googleId, value).then(data => setSpendings(data[\"spending\"]));\n    };\n\n    const arrayMax = (arr) => {\n        if (!arr || arr.length === 0) return 100;\n        return arr.reduce(function (a, b) {\n            let p = parseInt(a);\n            let v = parseInt(b);\n            return p > v ? p : v;\n        });\n    }\n\n    return (\n        <div className={classes.root}>\n            <VictoryChart\n                theme={VictoryTheme.material}\n                domain={{ y: [0, arrayMax(spendings)] }}\n            >\n                <VictoryLine\n                    style={{\n                        data: { stroke: \"#c43a31\" },\n                        parent: { border: \"1px solid #ccc\" }\n                    }}\n                    data={\n                        spendings.map((item, index) => { return { \"x\": index + 1, \"y\": parseInt(item) } })\n                    }\n                />\n            </VictoryChart>\n            <Typography variant=\"h6\" className={classes.title}>\n                {props.user.givenName}'s Spending:\n          </Typography>\n\n            <div className={classes.demo}>\n                <List dense={false}>\n                    <Button className={classes.addItem} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                        Add new item\n                   </Button>\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">New Item</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Please enter your food item\n                       </DialogContentText>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"item\"\n                                label=\"Spending Item\"\n                                type=\"text\"\n                                value={spendingItem}\n                                onInput={e => setSpendingItem(e.target.value)}\n                                fullWidth\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                                Cancel\n                       </Button>\n                            <Button onClick={handleSubmit} color=\"primary\">\n                                Add\n                       </Button>\n                        </DialogActions>\n                    </Dialog>\n                    {spendings && spendings.map((val) => (\n                        <>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <FolderIcon />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={val}\n                                //secondary={secondary ? 'Secondary text' : null}\n                                />\n                                <ListItemSecondaryAction>\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteSpending(val)} >\n\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </>\n                    ))}\n                </List>\n\n            </div>\n\n        </div>\n    );\n\n\n}\n",{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":17},{"ruleId":"90","severity":1,"message":"95","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"96","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"97","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"98","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":20},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"90","severity":1,"message":"103","line":18,"column":8,"nodeType":"92","messageId":"93","endLine":18,"endColumn":14},{"ruleId":"90","severity":1,"message":"104","line":20,"column":8,"nodeType":"92","messageId":"93","endLine":20,"endColumn":21},{"ruleId":"90","severity":1,"message":"105","line":23,"column":8,"nodeType":"92","messageId":"93","endLine":23,"endColumn":19},{"ruleId":"90","severity":1,"message":"106","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":20},{"ruleId":"90","severity":1,"message":"107","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":17},{"ruleId":"90","severity":1,"message":"108","line":12,"column":8,"nodeType":"92","messageId":"93","endLine":12,"endColumn":24},{"ruleId":"90","severity":1,"message":"109","line":13,"column":8,"nodeType":"92","messageId":"93","endLine":13,"endColumn":16},{"ruleId":"90","severity":1,"message":"95","line":14,"column":8,"nodeType":"92","messageId":"93","endLine":14,"endColumn":12},{"ruleId":"90","severity":1,"message":"110","line":18,"column":8,"nodeType":"92","messageId":"93","endLine":18,"endColumn":12},{"ruleId":"90","severity":1,"message":"111","line":46,"column":19,"nodeType":"92","messageId":"93","endLine":46,"endColumn":27},{"ruleId":"90","severity":1,"message":"112","line":47,"column":12,"nodeType":"92","messageId":"93","endLine":47,"endColumn":21},{"ruleId":"90","severity":1,"message":"113","line":47,"column":23,"nodeType":"92","messageId":"93","endLine":47,"endColumn":35},{"ruleId":"114","severity":1,"message":"115","line":72,"column":33,"nodeType":"116","endLine":72,"endColumn":35,"suggestions":"117"},{"ruleId":"90","severity":1,"message":"118","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":17},{"ruleId":"90","severity":1,"message":"95","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"96","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":66,"column":33,"nodeType":"116","endLine":66,"endColumn":35,"suggestions":"119"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'Grid' is defined but never used.","'Recipe' is defined but never used.","'Typography' is defined but never used.","'getRecipes' is defined but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'Button' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'ListItemIcon' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Icon' is defined but never used.","'setDense' is assigned a value but never used.","'secondary' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieve'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'withWidth' is defined but never used.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},"Update the dependencies array to be: [retrieve]",{"range":"127","text":"128"},{"range":"129","text":"128"},[2458,2460],"[retrieve]",[2172,2174]]